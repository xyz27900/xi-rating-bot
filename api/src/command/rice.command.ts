import { InlineKeyboard, Middleware } from 'grammy';
import { v4 } from 'uuid';
import { DOMAIN } from '@/config';
import { riceService } from '@/service/rice.service';
import { AuthBotContext } from '@/types/bot';
import { randomElement } from '@/utils/array';
import { mention } from '@/utils/telegram';

export const riceCommand: Middleware = async (ctx) => {
  const { user } = ctx as AuthBotContext;
  const chatId = ctx.chat?.id;
  if (!chatId) {
    return;
  }

  const riceCollectLink = await riceService.getUserRiceCollectLink(user);
  if (riceCollectLink) {
    const text = `${mention(user)}, —Ç—ã —É–∂–µ —Å–æ–±—Ä–∞–ª—Å—è —Å–æ–±–∏—Ä–∞—Ç—å —Ä–∏—Å!`;

    await ctx.reply(text, {
      reply_to_message_id: riceCollectLink.messageId,
      parse_mode: 'Markdown',
    });

    return;
  }

  const riceCollect = await riceService.getUserRiceCollect(user);
  if (riceCollect && riceCollect.nextTime > new Date()) {
    const diff = riceCollect.nextTime.getTime() - new Date().getTime();
    const hours = Math.floor(diff / (1000 * 60 * 60));
    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));

    const phrases = [
      '–ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ ‚è≥',
      '–ø–æ—Ä–∞–±–æ—Ç–∞–ª —Å–∞–º - –¥–∞–π –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –¥—Ä—É–≥–∏–º üë®‚Äçüåæ',
    ];

    const text = [
      `${mention(user)}, ${randomElement(phrases)}`,
      `–°–æ–±–∏—Ä–∞—Ç—å —Ä–∏—Å —Å–Ω–æ–≤–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —á–µ—Ä–µ–∑ _${hours} —á ${minutes} –º–∏–Ω_ ‚Ω∂`,
    ].join('\n');

    await ctx.reply(text, { parse_mode: 'Markdown' });

    return;
  }

  const linkUUID = v4();

  const keyboard = new InlineKeyboard()
    .login('–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –Ω–∞ –ø–æ–ª—è üë®‚Äçüåæ', {
      url: `https://${DOMAIN}?rid=${linkUUID}`,
    });

  const text = `${mention(user)}, –ø–æ—Ä–∞ –∑–∞ —Ä–∞–±–æ—Ç—É! üí™`;

  const message = await ctx.reply(text, {
    reply_markup: keyboard,
    parse_mode: 'Markdown',
  });

  await riceService.createUserCollectLink(linkUUID, user, chatId, message.message_id);
};
