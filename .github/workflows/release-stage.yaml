name: Release Stage

on:
  push:
    branches: [ master ]

jobs:
  build-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Copy package-lock.json
        run: cp package-lock.json api/package-lock.json

      - name: Set npm auth token
        run: echo //npm.pkg.github.com/:_authToken=$ACCESS_TOKEN >> .npmrc

      - name: Install dependencies
        run: npm ci

      - name: Lint package
        run: npm run lint

      - name: Build package
        run: npm run build

  build-ui:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Copy package-lock.json
        run: cp package-lock.json ui/package-lock.json

      - name: Set npm auth token
        run: echo //npm.pkg.github.com/:_authToken=$ACCESS_TOKEN >> .npmrc

      - name: Install dependencies
        run: npm ci

      - name: Lint package
        run: npm run lint

      - name: Build package
        run: npm run build

  deploy:
    needs: [ build-api, build-ui ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy to Heroku
        run: |
          echo $HEROKU_API_KEY | docker login -u ${{ secrets.HEROKU_EMAIL }} registry.heroku.com --password-stdin
          docker build --build-arg ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }} --tag registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}-stage/web .
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}-stage/web
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}-stage

      - name: Send message to Telegram channel
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHANNEL_ID_STAGE }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN_STAGE }}
          format: markdown
          message: |
            Build [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) released to *stage*.



